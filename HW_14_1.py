# üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å)
# üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ pytest (–∏–ª–∏ unittest –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä) –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
# üìå –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã

import json
from Sem_13_task_5 import Project
from Sem_13_task_4 import User
import pytest


@pytest.fixture
def load_list_person(filename="users.json"):
    list_person = Project.load(filename)
    list_person.set_admin(user_id="123", name="Sergio", level=1)
    return list_person


def test_add(load_list_person):
    assert load_list_person.add_user(user_id="235", name="Eugen", level=2) == "User added"


def test_login(load_list_person):
    assert load_list_person.login(user_id="963", name="Blade", level=3) == "Logging sucsess"


def test_admin(load_list_person):
    assert load_list_person.set_admin(user_id="519", name="Mary", level=4) == User(user_id="519", name="Mary", level=4)


if __name__ == '__main___':
    pytest.main()